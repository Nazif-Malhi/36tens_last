{"version":3,"file":"static/js/257.540da8bd.chunk.js","mappings":"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","sources":["layouts/authentication/Container.jsx","layouts/authentication/SignIn.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { protectedbackground } from \"../../assets\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: ${(props) => (props.signup ? \"170vh\" : \"100vh\")};\r\n  align-items: center;\r\n  text-align: center;\r\n  justify-content: center;\r\n  background-image: url(${protectedbackground});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { StyledContainer } from \"./Container\";\r\n\r\nimport { Logo } from \"../../assets\";\r\nimport { CustomButton } from \"../../components\";\r\nimport { is_emailValid } from \"../../utils\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, login_clearErrors, user_data_clearErrors } from \"../../store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LogInWrapper = styled.div`\r\n  width: 35%;\r\n  background-color: white;\r\n  border-radius: 7px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .header {\r\n    margin-top: 40px;\r\n    h1 {\r\n      font-weight: 600px;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n  .center-row {\r\n    width: 80%;\r\n    margin: 10px 0px;\r\n  }\r\n  .center-m-r {\r\n    width: 80%;\r\n    p {\r\n      color: red;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1075px) {\r\n    width: 60%;\r\n  }\r\n  @media screen and (max-width: 570px) {\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 380px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst SignIn = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated, user_auth_login_error, token_set } = useSelector(\r\n    (state) => state.user_auth_login\r\n  );\r\n  const { user_last_login, user_data_error } = useSelector(\r\n    (state) => state.user_data\r\n  );\r\n\r\n  const [email_validation_error, setEmail_validation_error] = useState(false);\r\n  const [text_error, setText_error] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleEmail_Validation = (email) => {\r\n    setEmail(email);\r\n    if (is_emailValid(email)) {\r\n      setEmail_validation_error(false);\r\n      setText_error(\"\");\r\n    } else {\r\n      setEmail_validation_error(true);\r\n      setText_error(\"Email not valid\");\r\n    }\r\n  };\r\n  const handleAuth = () => {\r\n    const login_Payload = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    if (email.length === 0) {\r\n      setText_error(\"Email feild is empty\");\r\n    } else if (email_validation_error) {\r\n      setText_error(\"Email not valid\");\r\n    } else if (password.length === 0) {\r\n      setText_error(\"Password feild is empty\");\r\n    } else {\r\n      setText_error(\"\");\r\n\r\n      dispatch(login(login_Payload));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (user_data_error) {\r\n      console.log(user_data_error);\r\n      dispatch(user_data_clearErrors);\r\n    }\r\n    if (user_auth_login_error === \"Bad Request\") {\r\n      setText_error(\"Email or Password is incorrect\");\r\n      setPassword(\"\");\r\n      dispatch(login_clearErrors());\r\n    }\r\n    if (isAuthenticated && token_set) {\r\n      if (user_last_login === null) {\r\n        navigate(\"/36tens/admin/profile\");\r\n      } else {\r\n        navigate(\"/36tens/admin/dashboard\");\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    user_auth_login_error,\r\n    isAuthenticated,\r\n    token_set,\r\n    user_last_login,\r\n    user_data_error,\r\n    navigate,\r\n  ]);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <LogInWrapper>\r\n        <div className=\"header\">\r\n          <h1>Log In</h1>\r\n        </div>\r\n        <Row className=\"center-row\">\r\n          <TextField\r\n            error={email_validation_error}\r\n            type={\"email\"}\r\n            label=\"Email\"\r\n            value={email}\r\n            placeholder=\"Enter Your Email\"\r\n            onChange={(e) => handleEmail_Validation(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <TextField\r\n            type={\"password\"}\r\n            label=\"Password\"\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        </Row>\r\n        <Row className=\"center-m-r\">\r\n          <p style={{ color: text_error.length === 0 ? \"white\" : \"red\" }}>\r\n            {text_error}\r\n          </p>\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <CustomButton\r\n            type={\"normal textnormal\"}\r\n            width={\"130px\"}\r\n            height={\"40px\"}\r\n            onClick={() => {\r\n              handleAuth();\r\n            }}\r\n          >\r\n            Login\r\n          </CustomButton>\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <p>\r\n            Forget your password{\" \"}\r\n            <a href=\"/36tens/authentication/forget-pasword\">Recover now</a>\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <p>\r\n            or Register yet ?{\" \"}\r\n            <a href=\"/36tens/authentication/signup\">Register Now</a>\r\n          </p>\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <Col style={{ textAlign: \"left\" }}>\r\n            <img src={Logo} alt=\"logo\" />\r\n          </Col>\r\n        </Row>\r\n      </LogInWrapper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"names":["StyledContainer","styled","props","signup","protectedbackground","LogInWrapper","navigate","useNavigate","dispatch","useDispatch","useSelector","state","user_auth_login","isAuthenticated","user_auth_login_error","token_set","user_data","user_last_login","user_data_error","useState","email_validation_error","setEmail_validation_error","text_error","setText_error","email","setEmail","password","setPassword","useEffect","console","log","user_data_clearErrors","login_clearErrors","className","error","type","label","value","placeholder","onChange","e","is_emailValid","handleEmail_Validation","target","size","style","color","length","width","height","onClick","login_Payload","login","handleAuth","marginTop","href","textAlign","src","Logo","alt"],"sourceRoot":""}