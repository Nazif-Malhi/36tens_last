{"version":3,"file":"static/js/502.7d48c857.chunk.js","mappings":"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","sources":["layouts/authentication/Container.jsx","../node_modules/react-bootstrap/esm/Spinner.js","layouts/authentication/SignIn.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { protectedbackground } from \"../../assets\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: ${(props) => (props.signup ? \"170vh\" : \"100vh\")};\r\n  align-items: center;\r\n  text-align: center;\r\n  justify-content: center;\r\n  background-image: url(${protectedbackground});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { StyledContainer } from \"./Container\";\r\n\r\nimport { Logo } from \"../../assets\";\r\nimport { CustomButton } from \"../../components\";\r\nimport { is_emailValid } from \"../../utils\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserData, login, login_clearErrors, user_data_clearErrors } from \"../../store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\n\r\nconst LogInWrapper = styled.div`\r\n  width: 35%;\r\n  background-color: white;\r\n  border-radius: 7px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .header {\r\n    margin-top: 40px;\r\n    h1 {\r\n      font-weight: 600px;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n  .center-row {\r\n    width: 80%;\r\n    margin: 10px 0px;\r\n  }\r\n  .center-m-r {\r\n    width: 80%;\r\n    p {\r\n      color: red;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1075px) {\r\n    width: 60%;\r\n  }\r\n  @media screen and (max-width: 570px) {\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 380px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst SignIn = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated, user_auth_login_error, token_set, loading } = useSelector(\r\n    (state) => state.user_auth_login\r\n  );\r\n  const { user_last_login, user_data_error, updated } = useSelector(\r\n    (state) => state.user_data\r\n  );\r\n\r\n\r\n  const [email_validation_error, setEmail_validation_error] = useState(false);\r\n  const [text_error, setText_error] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [spinner_trigger, setSpinner_trigger] = useState(false);\r\n\r\n  const handleEmail_Validation = (email) => {\r\n    setEmail(email);\r\n    if (is_emailValid(email)) {\r\n      setEmail_validation_error(false);\r\n      setText_error(\"\");\r\n    } else {\r\n      setEmail_validation_error(true);\r\n      setText_error(\"Email not valid\");\r\n    }\r\n  };\r\n  const handleAuth = () => {\r\n    if(!spinner_trigger){\r\n      console.log(\"auth\")\r\n    setSpinner_trigger(true);\r\n    const login_Payload = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    if (email.length === 0 || password.length === 0) {\r\n      setText_error(\"Feilds are empty\");\r\n    } else if (email_validation_error) {\r\n      setText_error(\"Email not valid\");\r\n    } else if(email.length > 0 && password.length > 0 && !email_validation_error){\r\n      setText_error(\"\");\r\n      dispatch(login(login_Payload));\r\n       \r\n    }\r\n  }\r\n   };\r\n   useEffect(() => {\r\n    if(isAuthenticated){\r\n    dispatch(getUserData());\r\n    }\r\n    else if(isAuthenticated === false && loading === false){\r\n      if(user_auth_login_error){\r\n      setText_error(user_auth_login_error.data.non_field_errors[0]);\r\n      }\r\n      else{\r\n        setText_error(\"Check your connectivity\");\r\n\r\n      }\r\n      setSpinner_trigger(false);\r\n    }\r\n    \r\n   }, [dispatch, isAuthenticated, user_auth_login_error, loading])\r\n\r\n   useEffect(() => {\r\nif(updated){\r\n  setSpinner_trigger(false);\r\n  console.log(user_last_login);\r\n  if(user_last_login === null){\r\n    navigate(\"/36tens/admin/profile\");\r\n  }\r\n  else{\r\n    if(user_last_login.length > 1){\r\n    navigate(\"/36tens/admin/dashboard\");\r\n  }\r\n}\r\n}\r\n   }, [updated])\r\n\r\n\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <LogInWrapper>\r\n        <div className=\"header\">\r\n          <h1>Log In</h1>\r\n        </div>\r\n        <Row className=\"center-row\">\r\n          <TextField\r\n            error={email_validation_error}\r\n            type={\"email\"}\r\n            label=\"Email\"\r\n            value={email}\r\n            placeholder=\"Enter Your Email\"\r\n            onChange={(e) => handleEmail_Validation(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <TextField\r\n            type={\"password\"}\r\n            label=\"Password\"\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        </Row>\r\n        <Row className=\"center-m-r\">\r\n          <p style={{ color:  \"red\" }}>\r\n            {text_error}\r\n          </p>\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <CustomButton\r\n            type={\"normal textnormal\"}\r\n            width={\"130px\"}\r\n            height={\"40px\"}\r\n            onClick={() => {\r\n              handleAuth();\r\n            }}\r\n          >\r\n            {spinner_trigger ? <Spinner animation=\"border\" variant=\"light\" /> : \"Login\"}\r\n          </CustomButton>\r\n        </Row>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <p>\r\n            Forget your password{\" \"}\r\n            <a href=\"/36tens/authentication/forget-pasword\">Recover now</a>\r\n          </p>\r\n        </Row>\r\n        <Row>\r\n          <p>\r\n            or Register yet ?{\" \"}\r\n            <a href=\"/36tens/authentication/signup\">Register Now</a>\r\n          </p>\r\n        </Row>\r\n        <Row className=\"center-row\">\r\n          <Col style={{ textAlign: \"left\" }}>\r\n            <img src={Logo} alt=\"logo\" />\r\n          </Col>\r\n        </Row>\r\n      </LogInWrapper>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"names":["StyledContainer","styled","props","signup","protectedbackground","Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","className","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","LogInWrapper","navigate","useNavigate","dispatch","useDispatch","useSelector","state","user_auth_login","isAuthenticated","user_auth_login_error","loading","token_set","user_data","user_last_login","updated","user_data_error","useState","email_validation_error","setEmail_validation_error","text_error","setText_error","email","setEmail","password","setPassword","spinner_trigger","setSpinner_trigger","useEffect","getUserData","data","non_field_errors","console","log","length","Row","TextField","error","type","label","value","placeholder","onChange","e","is_emailValid","handleEmail_Validation","target","style","color","width","height","onClick","login_Payload","login","handleAuth","marginTop","href","Col","textAlign","src","Logo","alt"],"sourceRoot":""}