{"version":3,"file":"static/js/122.e9c8661b.chunk.js","mappings":"mNA6HA,UA1GwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAsDC,EAAAA,EAAAA,KACpD,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,IAD3BC,EAAe,EAAfA,gBAAiBC,EAAO,EAAPA,QAASC,EAAe,EAAfA,gBAIlC,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAkCF,EAAAA,EAAAA,UAAS,IAAG,eAAvCG,EAAS,KAAEC,EAAY,KAC9B,GAA8BJ,EAAAA,EAAAA,UAAS,IAAG,eAAnCK,EAAO,KAAEC,EAAU,KAC1B,GAAoBN,EAAAA,EAAAA,UAAS,GAAE,eAAxBO,EAAE,KAAEC,EAAK,MAGhBC,EAAAA,EAAAA,YAAU,WACJV,IACFW,QAAQC,IAAIZ,GACZP,GAASoB,EAAAA,EAAAA,QAEXpB,GAASqB,EAAAA,EAAAA,MACX,GAAG,CAACrB,IAqCJ,OACE,UAAC,IAAS,YACR,SAAC,IAAG,CAACsB,UAAU,SAAQ,UACrB,UAAC,IAAG,CAACA,UAAU,aAAY,WACzB,SAAC,IAAG,CAACA,UAAU,QAAO,UACpB,+CAEF,SAAC,IAAG,CAACA,UAAW,oBAAoB,UAClC,UAAC,KAAY,CACXC,KAAM,kCACNC,MAAM,QACNC,OAAO,OACPC,QAAS,WACPhB,GAAc,GACdI,EAAW,QACb,EAAE,WAEF,SAAC,MAAa,CAACa,SAAU,WAAW,kCAK5C,SAAC,IAAG,CAACL,UAAU,OAAM,UACnB,SAAC,KAAmB,CAClBM,aAAc,SAACC,IAhDF,SAACA,GACpB7B,GAAS8B,EAAAA,EAAAA,IAAsBD,GACjC,CA+CUD,CAAaC,EACf,EACAE,WAAY,SAACC,EAAMjB,EAAIQ,EAAMU,IA9DlB,SAACD,EAAMjB,EAAIQ,EAAMU,GAMlCrB,EALa,CACXoB,KAAMA,EACNT,KAAMA,EACNU,IAAKA,IAGPjB,EAAMD,GACND,EAAW,UACXJ,GAAc,EAChB,CAqDUqB,CAAWC,EAAMjB,EAAIQ,EAAMU,EAC7B,EACAC,KAAO5B,EA3EF,GA2EYD,EACjB8B,QAAS7B,OAGb,SAAC,KAAmB,CAClB8B,KAAM3B,EACN4B,OAAQ,WACN3B,GAAc,GACdI,EAAW,GACb,EACAD,QAASA,EACTyB,YAAa3B,EACb4B,KAAMlC,EACNmC,iBAAkB,SAACX,IAhEL,SAACA,GACnB,QAAUY,IAANZ,EAAiB,CACnB,IAAMa,EAA0B,CAC9BnB,KAAMM,EAAEc,gBACRC,WAAYf,EAAEI,IACdY,MAAOhB,EAAExB,iBAIX,OAFAK,GAAc,GACdI,EAAW,IACHe,EAAEhB,SACR,IAAK,SACHb,GAAS8C,EAAAA,EAAAA,IAAsBJ,EAAyB3B,IACxD,MACF,IAAK,QACHf,GAAS+C,EAAAA,EAAAA,IAAmBL,IAKlC,CACF,CA6CQM,CAAYnB,EACd,MAIR,C,sECzHaoB,E,QAAYC,QAAAA,IAAU,8uB","sources":["layouts/masters/Competency_Name.jsx","layouts/masters/Container.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { Container } from \"./Container\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CompetenciesColumns,\r\n  CompetencyNameModal,\r\n  CustomButton,\r\n} from \"../../components\";\r\nimport {\r\n  add_competencyName,\r\n  comp_name_clearErrors,\r\n  delete_competencyName,\r\n  get_competencyName,\r\n  update_competencyName,\r\n} from \"../../store\";\r\n\r\nconst Competency_Name = () => {\r\n  const dispatch = useDispatch();\r\n  const { competency_name, loading, comp_name_error } = useSelector(\r\n    (state) => state.competency_names\r\n  );\r\n\r\n  const [show_modal, setShow_Modal] = useState(false);\r\n  const [editValue, setEditValue] = useState([]);\r\n  const [trigger, setTrigger] = useState(\"\");\r\n  const [id, setId] = useState(0);\r\n  const temp = [];\r\n\r\n  useEffect(() => {\r\n    if (comp_name_error) {\r\n      console.log(comp_name_error);\r\n      dispatch(comp_name_clearErrors());\r\n    }\r\n    dispatch(get_competencyName());\r\n  }, [dispatch]);\r\n\r\n  const handleEdit = (name, id, type, def) => {\r\n    const data = {\r\n      name: name,\r\n      type: type,\r\n      def: def,\r\n    };\r\n    setEditValue(data);\r\n    setId(id);\r\n    setTrigger(\"isEdit\");\r\n    setShow_Modal(true);\r\n  };\r\n  const handleDelete = (e) => {\r\n    dispatch(delete_competencyName(e));\r\n  };\r\n  const handleModal = (e) => {\r\n    if (e !== undefined) {\r\n      const competency_name_payload = {\r\n        type: e.competency_type,\r\n        defination: e.def,\r\n        title: e.competency_name,\r\n      };\r\n      setShow_Modal(false);\r\n      setTrigger(\"\");\r\n      switch (e.trigger) {\r\n        case \"isEdit\":\r\n          dispatch(update_competencyName(competency_name_payload, id));\r\n          break;\r\n        case \"isAdd\":\r\n          dispatch(add_competencyName(competency_name_payload));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Row className=\"header\">\r\n        <Row className=\"common-row\">\r\n          <Col className=\"title\">\r\n            <h1>Competency Name</h1>\r\n          </Col>\r\n          <Col className={\"responsive-button\"}>\r\n            <CustomButton\r\n              type={\"normal textnormal margin-button\"}\r\n              width=\"210px\"\r\n              height=\"40px\"\r\n              onClick={() => {\r\n                setShow_Modal(true);\r\n                setTrigger(\"isAdd\");\r\n              }}\r\n            >\r\n              <AiOutlinePlus fontSize={\"1.2rem\"}/> Add Competency Name\r\n            </CustomButton>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n      <Row className=\"body\">\r\n        <CompetenciesColumns\r\n          handleDelete={(e) => {\r\n            handleDelete(e);\r\n          }}\r\n          handleEdit={(name, id, type, def) => {\r\n            handleEdit(name, id, type, def);\r\n          }}\r\n          rows={!loading ? competency_name : temp}\r\n          pending={loading}\r\n        />\r\n      </Row>\r\n      <CompetencyNameModal\r\n        show={show_modal}\r\n        onHide={() => {\r\n          setShow_Modal(false);\r\n          setTrigger(\"\");\r\n        }}\r\n        trigger={trigger}\r\n        value_input={editValue}\r\n        data={competency_name}\r\n        onHandleCallBack={(e) => {\r\n          handleModal(e);\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Competency_Name;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .header {\r\n    width: 80%;\r\n    height: auto;\r\n    .common-row {\r\n      height: auto;\r\n      margin: 10px 0px;\r\n      padding: 0px;\r\n      .responsive-button {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n    .title {\r\n      display: flex;\r\n      @media screen and (max-width: 528px) {\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    .margin-button {\r\n      margin-right: 10px;\r\n      @media screen and (max-width: 776px) {\r\n        margin-bottom: 5px;\r\n      }\r\n    }\r\n  }\r\n  .body {\r\n    width: 79%;\r\n    display: flex;\r\n    align-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n"],"names":["dispatch","useDispatch","useSelector","state","competency_names","competency_name","loading","comp_name_error","useState","show_modal","setShow_Modal","editValue","setEditValue","trigger","setTrigger","id","setId","useEffect","console","log","comp_name_clearErrors","get_competencyName","className","type","width","height","onClick","fontSize","handleDelete","e","delete_competencyName","handleEdit","name","def","rows","pending","show","onHide","value_input","data","onHandleCallBack","undefined","competency_name_payload","competency_type","defination","title","update_competencyName","add_competencyName","handleModal","Container","styled"],"sourceRoot":""}