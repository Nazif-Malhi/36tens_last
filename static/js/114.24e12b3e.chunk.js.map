{"version":3,"file":"static/js/114.24e12b3e.chunk.js","mappings":"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","sources":["layouts/admin/Surveys.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport {MenuItem, FormControl, Select, Pagination} from \"@mui/material\";\r\nimport { SurveyCreation } from \"../../assets/data/Database\";\r\nimport { CreateSurvey, CustomButton, Table, TableHeading, usePagination } from \"../../components\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SurveyContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .header {\r\n    height: auto;\r\n    width: 90%;\r\n    .common-row {\r\n      height: auto;\r\n      margin: 10px 0px;\r\n      padding: 0px;\r\n    }\r\n    .title {\r\n      display: flex;\r\n      @media screen and (max-width: 528px) {\r\n        justify-content: center;\r\n      }\r\n    }\r\n    .responsive-button {\r\n      display: flex;\r\n      justify-content: end;\r\n      @media screen and (max-width: 776px) {\r\n        flex-direction: column;\r\n      }\r\n    }\r\n    .options {\r\n      width: 60%;\r\n      @media screen and (max-width: 890px) {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n  .body {\r\n    width: 90%;\r\n    display: flex;\r\n    height: calc(100% - 60px);\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst Surveys = () => {\r\n  const navigate = useNavigate();\r\n  const [recentlyUpdated, setRecentlyUpdated] = useState(\"\");\r\n  const [allTypes, setAllTypes] = useState(\"\");\r\n  const [active, setActive] = useState(\"\");\r\n  const [isShowSurveyModal, setShowSurveyModal] = useState(false);\r\n\r\n  const [dumyData, setDumyData] = useState([]);\r\n\r\n  const handleRecentlyUpdated = (event) => {\r\n    setRecentlyUpdated(event.target.value);\r\n  };\r\n  const handleAllTypes = (event) => {\r\n    setAllTypes(event.target.value);\r\n  };\r\n  const handleActive = (event) => {\r\n    setActive(event.target.value);\r\n  };\r\n\r\n  // const create survey\r\n\r\n  const createSurveyMethod = (val) => {\r\n    if(val !== null){\r\nSurveyCreation.push(val);\r\nsetShowSurveyModal(false);\r\n    navigate(\"/36tens/admin/competencies\");\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    setDumyData(SurveyCreation);\r\n  }, [isShowSurveyModal]);\r\n\r\n  let [page, setPage] = useState(1);\r\n  const PER_PAGE = 4;\r\n\r\n  const count = Math.ceil(dumyData.length / PER_PAGE);\r\n  const _DATA = usePagination(dumyData, PER_PAGE);\r\n\r\n  const handleChangePagination = (e, p) => {\r\n    setPage(p);\r\n    _DATA.jump(p);\r\n  };\r\n\r\n  return (\r\n    <SurveyContainer>\r\n      <Row className=\"header\">\r\n        <Row className=\"common-row\">\r\n          <Col className=\"title\">\r\n            <h1>Surveys Creation</h1>\r\n          </Col>\r\n          <Col className={\"responsive-button\"}>\r\n            <CustomButton\r\n              type={\"normal textnormal\"}\r\n              width=\"220px\"\r\n              height=\"40px\"\r\n              onClick={() => setShowSurveyModal(true)}\r\n            >\r\n              Create New Survey\r\n            </CustomButton>\r\n          </Col>\r\n          <Row className=\"common-row\">\r\n            <div className=\"options\">\r\n              <Row>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <Select\r\n                      value={recentlyUpdated}\r\n                      onChange={handleRecentlyUpdated}\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>Recently Created</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={\"recently_updated\"}>\r\n                        Recently Updated\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <Select\r\n                      value={allTypes}\r\n                      onChange={handleAllTypes}\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>All Types</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={\"standard\"}>Standard</MenuItem>\r\n                      <MenuItem value={\"custom\"}>Custom</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <Select\r\n                      value={active}\r\n                      onChange={handleActive}\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>Active</em>\r\n                      </MenuItem>\r\n                      <MenuItem value={\"completed\"}>Completed</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Row>\r\n        </Row>\r\n      </Row>\r\n      <Row className=\"body\">\r\n        <TableHeading\r\n          columnName={[\"Name\", \"Questions\", \"Responses\", \"Completion Rate\"]}\r\n          action={true}\r\n        />\r\n        {_DATA.currentData().map((val, key) => {\r\n          return (\r\n            <Table key={key} name={val.name} quest={38} res={\"10\"} rate={80} />\r\n          );\r\n        })}\r\n      </Row>\r\n\r\n      <Pagination\r\n        count={count}\r\n        size=\"medium\"\r\n        page={page}\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n        onChange={handleChangePagination}\r\n        style={{ marginBottom: \"15px\" }}\r\n      />\r\n      <CreateSurvey\r\n        show={isShowSurveyModal}\r\n        onHide={() => setShowSurveyModal(false)}\r\n        createSurveyMethod={(e) => {\r\n          createSurveyMethod(e);\r\n        }}\r\n      />\r\n    </SurveyContainer>\r\n  );\r\n};\r\n\r\nexport default Surveys;\r\n"],"names":["SurveyContainer","styled","navigate","useNavigate","useState","recentlyUpdated","setRecentlyUpdated","allTypes","setAllTypes","active","setActive","isShowSurveyModal","setShowSurveyModal","dumyData","setDumyData","useEffect","SurveyCreation","page","setPage","count","Math","ceil","length","_DATA","usePagination","className","type","width","height","onClick","sx","size","style","background","value","onChange","event","target","displayEmpty","inputProps","columnName","action","currentData","map","val","key","name","quest","res","rate","variant","shape","e","p","jump","marginBottom","show","onHide","createSurveyMethod"],"sourceRoot":""}