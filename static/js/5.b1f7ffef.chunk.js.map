{"version":3,"file":"static/js/5.b1f7ffef.chunk.js","mappings":"kNAkIA,UA/G6B,WAC3B,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA6DC,EAAAA,EAAAA,KAC3D,SAACC,GAAK,OAAKA,EAAMC,qBAAqB,IADhCA,EAAqB,EAArBA,sBAAuBC,EAAO,EAAPA,QAASC,EAAgB,EAAhBA,iBAIxC,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAkCF,EAAAA,EAAAA,UAAS,IAAG,eAAvCG,EAAS,KAAEC,EAAY,KAC9B,GAA8BJ,EAAAA,EAAAA,UAAS,IAAG,eAAnCK,EAAO,KAAEC,EAAU,KAC1B,GAAoBN,EAAAA,EAAAA,UAAS,GAAE,eAAxBO,EAAE,KAAEC,EAAK,MAGhBC,EAAAA,EAAAA,YAAU,WACJV,GACFN,GAASiB,EAAAA,EAAAA,OAEXjB,GAASkB,EAAAA,EAAAA,KACX,GAAG,CAAClB,IA2CJ,OACE,UAAC,IAAS,YACR,SAAC,IAAG,CAACmB,UAAU,SAAQ,UACrB,UAAC,IAAG,CAACA,UAAU,aAAY,WACzB,SAAC,IAAG,CAACA,UAAU,QAAO,UACpB,qDAEF,SAAC,IAAG,CAACA,UAAW,oBAAoB,UAClC,UAAC,KAAY,CACXC,KAAM,kCACNC,MAAM,QACNC,OAAO,OACPC,QAAS,WACPd,GAAc,GACdI,EAAW,QACb,EAAE,WAEF,SAAC,MAAa,CAACW,SAAU,WAAW,wCAK5C,SAAC,IAAG,CAACL,UAAU,OAAM,UACnB,SAAC,KAA0B,CACzBM,aAAc,SAACC,IArDF,SAACA,GACpB1B,GAAS2B,EAAAA,EAAAA,IAA4BD,GACvC,CAoDUD,CAAaC,EACf,EACAE,WAAY,SAACC,EAAMf,EAAIM,EAAMU,EAAKC,IApEvB,SAACF,EAAMf,EAAIM,EAAMU,EAAKC,GAOvCpB,EANa,CACXkB,KAAMA,EACNT,KAAMA,EACNU,IAAKA,EACLC,UAAWA,IAGbhB,EAAMD,GACND,EAAW,UACXJ,GAAc,EAChB,CA0DUmB,CAAWC,EAAMf,EAAIM,EAAMU,EAAKC,EAClC,EACAC,KAAO3B,EAhFF,GAgFYD,EACjB6B,QAAS5B,OAGb,SAAC,KAAwB,CACvB6B,KAAM1B,EACN2B,OAAQ,WACN1B,GAAc,GACdI,EAAW,GACb,EACAD,QAASA,EACTwB,YAAa1B,EACb2B,KAAMjC,EACNkC,iBAAkB,SAACZ,IArEL,SAACA,GACnB,QAAUa,IAANb,EAAiB,CACnB,IAAMc,EAA8B,CAClCC,WAAYf,EAAEe,WACdC,iBAAkBhB,EAAEgB,iBACpBtB,KAAMM,EAAEN,KACRuB,WAAYjB,EAAEiB,WAAW,GACzBZ,UAAWL,EAAEK,WAIf,OAFAtB,GAAc,GACdI,EAAW,IACHa,EAAEd,SACR,IAAK,SACHZ,GACE4C,EAAAA,EAAAA,IAA4BJ,EAA6B1B,IAE3D,MACF,IAAK,QACHd,GAAS6C,EAAAA,EAAAA,IAAyBL,IAKxC,CACF,CA8CQM,CAAYpB,EACd,MAIR,C,sEC9HaqB,E,QAAYC,QAAAA,IAAU,8uB","sources":["layouts/masters/Competency_Statments.jsx","layouts/masters/Container.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CompetencyStatementModal,\r\n  CompetencyStatmentsColumns,\r\n  CustomButton,\r\n} from \"../../components\";\r\nimport {\r\n  add_competencyStatements,\r\n  competencyStatment_clearErrors,\r\n  delete_competencyStatements,\r\n  get_competencyStatements,\r\n  update_competencyStatements,\r\n} from \"../../store\";\r\n\r\nimport { Container } from \"./Container\";\r\n\r\nconst Competency_Statments = () => {\r\n  const dispatch = useDispatch();\r\n  const { competency_statements, loading, comp_state_error } = useSelector(\r\n    (state) => state.competency_statements\r\n  );\r\n\r\n  const [show_modal, setShow_Modal] = useState(false);\r\n  const [editValue, setEditValue] = useState([]);\r\n  const [trigger, setTrigger] = useState(\"\");\r\n  const [id, setId] = useState(0);\r\n  const temp = [];\r\n\r\n  useEffect(() => {\r\n    if (comp_state_error) {\r\n      dispatch(competencyStatment_clearErrors());\r\n    }\r\n    dispatch(get_competencyStatements());\r\n  }, [dispatch]);\r\n\r\n  const handleEdit = (name, id, type, def, statement) => {\r\n    const data = {\r\n      name: name,\r\n      type: type,\r\n      def: def,\r\n      statement: statement,\r\n    };\r\n    setEditValue(data);\r\n    setId(id);\r\n    setTrigger(\"isEdit\");\r\n    setShow_Modal(true);\r\n  };\r\n  const handleDelete = (e) => {\r\n    dispatch(delete_competencyStatements(e));\r\n  };\r\n  const handleModal = (e) => {\r\n    if (e !== undefined) {\r\n      const competency_statment_payload = {\r\n        competency: e.competency,\r\n        competency_title: e.competency_title,\r\n        type: e.type,\r\n        defination: e.defination[0],\r\n        statement: e.statement,\r\n      };\r\n      setShow_Modal(false);\r\n      setTrigger(\"\");\r\n      switch (e.trigger) {\r\n        case \"isEdit\":\r\n          dispatch(\r\n            update_competencyStatements(competency_statment_payload, id)\r\n          );\r\n          break;\r\n        case \"isAdd\":\r\n          dispatch(add_competencyStatements(competency_statment_payload));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"header\">\r\n        <Row className=\"common-row\">\r\n          <Col className=\"title\">\r\n            <h1>Competency Statements</h1>\r\n          </Col>\r\n          <Col className={\"responsive-button\"}>\r\n            <CustomButton\r\n              type={\"normal textnormal margin-button\"}\r\n              width=\"250px\"\r\n              height=\"40px\"\r\n              onClick={() => {\r\n                setShow_Modal(true);\r\n                setTrigger(\"isAdd\");\r\n              }}\r\n            >\r\n              <AiOutlinePlus fontSize={\"1.2rem\"}/> Add Competency Statements\r\n            </CustomButton>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n      <Row className=\"body\">\r\n        <CompetencyStatmentsColumns\r\n          handleDelete={(e) => {\r\n            handleDelete(e);\r\n          }}\r\n          handleEdit={(name, id, type, def, statement) => {\r\n            handleEdit(name, id, type, def, statement);\r\n          }}\r\n          rows={!loading ? competency_statements : temp}\r\n          pending={loading}\r\n        />\r\n      </Row>\r\n      <CompetencyStatementModal\r\n        show={show_modal}\r\n        onHide={() => {\r\n          setShow_Modal(false);\r\n          setTrigger(\"\");\r\n        }}\r\n        trigger={trigger}\r\n        value_input={editValue}\r\n        data={competency_statements}\r\n        onHandleCallBack={(e) => {\r\n          handleModal(e);\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Competency_Statments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  .header {\r\n    width: 80%;\r\n    height: auto;\r\n    .common-row {\r\n      height: auto;\r\n      margin: 10px 0px;\r\n      padding: 0px;\r\n      .responsive-button {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n    .title {\r\n      display: flex;\r\n      @media screen and (max-width: 528px) {\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    .margin-button {\r\n      margin-right: 10px;\r\n      @media screen and (max-width: 776px) {\r\n        margin-bottom: 5px;\r\n      }\r\n    }\r\n  }\r\n  .body {\r\n    width: 79%;\r\n    display: flex;\r\n    align-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n"],"names":["dispatch","useDispatch","useSelector","state","competency_statements","loading","comp_state_error","useState","show_modal","setShow_Modal","editValue","setEditValue","trigger","setTrigger","id","setId","useEffect","competencyStatment_clearErrors","get_competencyStatements","className","type","width","height","onClick","fontSize","handleDelete","e","delete_competencyStatements","handleEdit","name","def","statement","rows","pending","show","onHide","value_input","data","onHandleCallBack","undefined","competency_statment_payload","competency","competency_title","defination","update_competencyStatements","add_competencyStatements","handleModal","Container","styled"],"sourceRoot":""}