{"version":3,"file":"static/js/764.4cc6df8a.chunk.js","mappings":"uTA6BMA,EAAmBC,EAAAA,QAAAA,IAAU,4tCA4gBnC,UAxcgB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAgDC,EAAAA,EAAAA,KAC9C,SAACC,GAAK,OAAKA,EAAMC,SAAS,IAGtBC,GAJW,EAATD,UAAkB,EAAPE,QAAwB,EAAfC,iBAIZC,EAAAA,EAAAA,UAAQ,kBAAMC,MAAcC,SAAS,GAAE,KACvD,GAAkCC,EAAAA,EAAAA,UACZ,OAApBZ,EAAKa,WAAsB,GAAKb,EAAKa,YACtC,eAFMC,EAAS,KAGhB,GAH8B,MAGEF,EAAAA,EAAAA,UACX,OAAnBZ,EAAKe,UAAqB,GAAKf,EAAKe,YACrC,eAFMC,EAAQ,KAGf,GAH4B,MAGFJ,EAAAA,EAAAA,UAAwB,OAAfZ,EAAKiB,MAAiB,GAAKjB,EAAKiB,QAAM,eAAlEA,EAAK,KACZ,GADsB,MACQL,EAAAA,EAAAA,UACP,OAArBZ,EAAKkB,YAAuB,GAAKlB,EAAKkB,cACvC,eAFMC,EAAO,KAId,GAJ0B,MAIIP,EAAAA,EAAAA,UACX,OAAjBZ,EAAKoB,QAAmB,GAAKpB,EAAKoB,UACnC,eAFMA,EAAO,KAAEC,EAAU,KAG1B,GAAwBT,EAAAA,EAAAA,UAAuB,OAAdZ,EAAKsB,KAAgB,GAAKtB,EAAKsB,MAAK,eAA9DA,EAAI,KAAEC,EAAO,KACpB,GAAgCX,EAAAA,EAAAA,UACZ,OAAlBZ,EAAKwB,SAAoB,GAAKxB,EAAKwB,UACpC,eAFMA,EAAQ,KAAEC,EAAW,KAG5B,GAA8Bb,EAAAA,EAAAA,UACX,OAAjBZ,EAAK0B,QAAmB,GAAK1B,EAAK0B,SACnC,eAFMA,EAAO,KAAEC,EAAU,KAI1B,GAAsCf,EAAAA,EAAAA,UACd,OAAtBZ,EAAK4B,aAAwB,GAAK5B,EAAK4B,cACxC,eAFMC,EAAW,KAAEC,GAAc,KAGlC,IAAsClB,EAAAA,EAAAA,UACd,OAAtBZ,EAAK+B,aAAwB,GAAK/B,EAAK+B,cACxC,iBAFMC,GAAW,MAAEC,GAAc,MAIlC,IAAgCrB,EAAAA,EAAAA,UACZ,OAAlBZ,EAAKkC,SAAoB,GAAKlC,EAAKkC,UACpC,iBAFMA,GAAQ,MAAEC,GAAW,MAG5B,IAA4BvB,EAAAA,EAAAA,UACT,OAAjBZ,EAAKoC,QAAmB,GAAKpC,EAAKoC,SACnC,iBAFMC,GAAM,MAAEC,GAAS,MAIxB,IAA4C1B,EAAAA,EAAAA,UACvB,OAAnBZ,EAAKuC,UAAqB,GAAKvC,EAAKuC,WACrC,iBAFMC,GAAc,MAAEC,GAAiB,MAGxC,IAAsC7B,EAAAA,EAAAA,UACd,OAAtBZ,EAAK0C,aAAwB,GAAK1C,EAAK0C,cACxC,iBAFMC,GAAW,MAAEC,GAAc,MAIlC,IAAwBhC,EAAAA,EAAAA,UAAuB,OAAdZ,EAAK6C,KAAgB,GAAK7C,EAAK6C,MAAK,iBAA9DA,GAAI,MACX,IADoB,OACoBjC,EAAAA,EAAAA,UACrB,OAAjBZ,EAAK8C,QAAmB,GAAK9C,EAAK8C,UACnC,iBAFMC,GAAY,MAInB,IAJoC,OAIYnC,EAAAA,EAAAA,WAAS,IAAM,iBAAxDoC,GAAgB,MAAEC,GAAmB,MAC5C,IAAsDrC,EAAAA,EAAAA,WAAS,GAAM,iBAA9DsC,GAAmB,MAAEC,GAAsB,MAElD,IAAoCvC,EAAAA,EAAAA,UAAS,IAAG,iBAAzCwC,GAAU,MAAEC,GAAa,MAc1BC,GAAgB,WACpB,GAbsB,WACtB,GAAkB,YAAdtD,EAAK6C,KAAoB,CAC3B,GAA2B,IAAvBhB,EAAY0B,OAEd,OADAF,GAAc,gCACP,EACF,GAAIxB,EAAY0B,OAAS,EAE9B,OADAF,GAAc,KACP,CAEX,CACF,CAGMG,GAAmB,CACrB,IAAMC,EAAiB,CACrBrC,QAASA,EACTE,KAAMA,EACNE,SAAUA,EACVE,QAASA,EACTK,aAAcC,GACdE,SAAUA,GACVE,QAASC,GACTE,UAAWC,GACXE,aAAcC,IAEhB1C,GAASyD,EAAAA,EAAAA,IAAeD,EAAgBzD,EAAK2D,IAC/C,CACF,EAEA,OACE,iCACE,SAAC7D,EAAgB,WACf,UAAC,IAAG,CAAC8D,MAAO,CAAEC,MAAO,OAAQC,QAAS,QAAS,WAC7C,UAAC,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAE,WACjB,SAAC,IAAG,WACF,iBACEC,UAAU,oBACVL,MAAO,CAAEE,QAAS,YAAa,WAE/B,gBAAKG,UAAU,SAAQ,UACrB,wBAAKnD,EAAY,IAAME,OAEzB,iBAAKiD,UAAU,OAAM,WACnB,mCAAWhD,MACX,4CAAoBE,SAEtB,iBAAK8C,UAAU,iBAAgB,WAC7B,SAAC,IAAM,CACLC,QAAQ,kBACRC,QAAS,WACPlB,IAAoB,EACtB,EAAE,mBAIJ,SAAC,IAAM,CACLiB,QAAQ,SACRC,QAAS,WACPhB,IAAuB,EACzB,EAAE,sCAOV,SAAC,IAAG,WACF,iBAAKc,UAAU,+BAA8B,WAC3C,gBAAKA,UAAU,QAAO,UACpB,8CACkB,0BAAOpB,WAG3B,gBAAKoB,UAAU,QAAO,UACpB,sCACY,KACV,0BAAwB,IAAjBlB,GAAqB,WAAa,iBAG7C,gBAAKkB,UAAU,QAAO,UACpB,uCACa,KACX,2BACE,kBACEpB,KAAM,WACNuB,QAASpE,EAAKqE,YACdC,MAAM,cACNC,UAAQ,YAKhB,SAAC,IAAM,CAACL,QAAQ,UAAUM,UAAU,EAAK,2BAM/C,SAAC,IAAG,CAACT,GAAI,GAAIC,GAAI,EAAE,UACjB,iBAAKC,UAAU,qBAAoB,WACjC,SAAC,IAAG,CAACA,UAAU,mBAAkB,UAC/B,gDAEF,UAAC,IAAG,CAACA,UAAU,aAAY,WACzB,SAAC,IAAG,WACF,SAAC,IAAS,CACRN,GAAG,gBACHc,MAAM,UACNC,KAAK,QACLC,WAAS,EACTL,MAAOlD,EACPwD,SAAU,SAACC,GACTxD,EAAWwD,EAAEC,OAAOR,MACtB,OAIJ,SAAC,IAAG,WACF,SAAC,IAAS,CACRX,GAAG,mBACHc,MAAM,OACNC,KAAK,QACLC,WAAS,EACTL,MAAOhD,EACPsD,SAAU,SAACC,GACTtD,EAAQsD,EAAEC,OAAOR,MACnB,UAIN,UAAC,IAAG,CAACL,UAAU,aAAY,WACzB,SAAC,IAAG,WACF,SAAC,IAAS,CACRN,GAAG,gBACHc,MAAM,WACNC,KAAK,QACLC,WAAS,EACTL,MAAO9C,EACPoD,SAAU,SAACC,GACTpD,EAAYoD,EAAEC,OAAOR,MACvB,OAIJ,SAAC,IAAG,WACF,UAAC,IAAW,CACVS,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,oBAC/B,QAEV,SAAC,IAAM,CACLsB,QAAQ,2BACRtB,GAAG,qBACHW,MAAO5C,EAAQ6B,OAAS,EAAI7B,EAAU,GACtCkD,SAAU,SAACC,GAAC,OAAKlD,EAAWkD,EAAEC,OAAOR,MAAM,EAC3CY,OAAO,SAAC,IAAa,CAACT,MAAM,SAAU,SAErCnE,EAAQ6E,KAAI,SAACC,EAAKzB,GACjB,OACE,SAAC,IAAQ,CAAiBW,MAAOc,EAAId,MAAM,SACxCc,EAAIX,OADQW,EAAId,MAIvB,eAKR,SAAC,IAAG,CAACL,UAAU,mBAAkB,UAC/B,+CAEF,UAAC,IAAG,CAACA,UAAU,aAAY,WACzB,SAAC,IAAG,WACF,SAAC,IAAS,CACRO,SAAwB,YAAdxE,EAAK6C,KACfc,GAAG,gBACHc,MAAM,eACNC,KAAK,QACLC,WAAS,EACTL,MAAOzC,EACP+C,SAAU,SAACC,GACT/C,GAAe+C,EAAEC,OAAOR,MAC1B,OAGJ,SAAC,IAAG,WACF,UAAC,IAAW,CACVS,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,yBAC1B,QAEf,SAAC,IAAM,CACLa,SAAwB,YAAdxE,EAAK6C,KACfoC,QAAQ,2BACRtB,GAAG,qBACHW,MAAOtC,GAAYuB,OAAS,EAAIvB,GAAc,GAC9C4C,SAAU,SAACC,GAAC,OAAK5C,GAAe4C,EAAEC,OAAOR,MAAM,EAC/CY,OAAO,SAAC,IAAa,CAACT,MAAM,iBAAkB,SAE7CY,EAAAA,GAAAA,KAAoB,SAACD,EAAKzB,GACzB,OACE,SAAC,IAAQ,CAAmBW,MAAOc,EAAIE,QAAQ,SAC5CF,EAAIE,SADQF,EAAIE,QAIvB,eAKR,UAAC,IAAG,CAACrB,UAAU,aAAY,WACzB,SAAC,IAAG,WACF,UAAC,IAAW,CACVc,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,qBAC9B,QAEX,SAAC,IAAM,CACLa,SAAwB,YAAdxE,EAAK6C,KACfoC,QAAQ,2BACRtB,GAAG,qBACHW,MAAOpC,GAASqB,OAAS,EAAIrB,GAAW,GACxC0C,SAAU,SAACC,GAAC,OAAK1C,GAAY0C,EAAEC,OAAOR,MAAM,EAC5CY,OAAO,SAAC,IAAa,CAACT,MAAM,aAAc,SAEzCc,EAAAA,GAAAA,KAAe,SAACH,EAAKzB,GACpB,OACE,SAAC,IAAQ,CAEPW,MAAOc,EAAII,cAAc,SAExBJ,EAAII,eAHAJ,EAAII,cAMf,YAIN,SAAC,IAAG,WACF,UAAC,IAAW,CACVT,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,kCACjB,QAExB,SAAC,IAAM,CACLa,SAAwB,YAAdxE,EAAK6C,KACfoC,QAAQ,2BACRtB,GAAG,qBACHW,MAAOjC,GACPuC,SAAU,SAACC,GAAC,OAAKvC,GAAUuC,EAAEC,OAAOR,MAAM,EAC1CY,OAAO,SAAC,IAAa,CAACT,MAAM,0BAA2B,SAEtDgB,EAAAA,GAAAA,KAAe,SAACL,EAAKzB,GACpB,OACE,SAAC,IAAQ,CAAkBW,MAAOc,EAAI/C,OAAO,SAC1C+C,EAAI/C,QADQ+C,EAAI/C,OAIvB,eAKR,UAAC,IAAG,CAAC4B,UAAU,aAAY,WACzB,SAAC,IAAG,WACF,UAAC,IAAW,CACVc,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,6BACtB,QAEnB,SAAC,IAAM,CACLa,SAAwB,YAAdxE,EAAK6C,KACfoC,QAAQ,2BACRtB,GAAG,qBACHW,MAAO9B,GAAee,OAAS,EAAIf,GAAiB,GACpDoC,SAAU,SAACC,GAAC,OAAKpC,GAAkBoC,EAAEC,OAAOR,MAAM,EAClDY,OAAO,SAAC,IAAa,CAACT,MAAM,qBAAsB,SAEjDiB,EAAAA,GAAAA,KAAc,SAACN,EAAKzB,GACnB,OACE,SAAC,IAAQ,CAAgBW,MAAOc,EAAIO,KAAK,SACtCP,EAAIO,MADQP,EAAIO,KAIvB,YAIN,SAAC,IAAG,WACF,UAAC,IAAW,CACVZ,GAAI,CAAElB,MAAO,QACba,KAAK,QACLd,MAAO,CAAEoB,WAAY,SAAU,WAE/B,UAAC,IAAU,CAACrB,GAAG,2BAA0B,yBAC1B,QAEf,SAAC,IAAM,CACLa,SAAwB,YAAdxE,EAAK6C,KACfoC,QAAQ,2BACRtB,GAAG,qBACHW,MAAO3B,GAAYY,OAAS,EAAIZ,GAAc,GAC9CiC,SAAU,SAACC,GAAC,OAAKjC,GAAeiC,EAAEC,OAAOR,MAAM,EAC/CY,OAAO,SAAC,IAAa,CAACT,MAAM,iBAAkB,SAE7CmB,EAAAA,GAAAA,KAAgB,SAACR,EAAKzB,GACrB,OACE,SAAC,IAAQ,CAAiBW,MAAOc,EAAIS,MAAM,SACxCT,EAAIS,OADQT,EAAIS,MAIvB,eAKR,cACEjC,MAAO,CACLkC,MAA6B,IAAtB1C,GAAWG,OAAe,QAAU,MAC3CwC,UAAW,UACX,SAED3C,MAEH,SAAC,IAAG,CACFQ,MAAO,CACLC,MAAO,MACPmC,aAAc,OACdC,UAAW,QACX,UAEF,UAAC,IAAG,CACFrC,MAAO,CACLsC,QAAS,OACTC,eAAgB,MAChBC,WAAY,UACZ,WAEF,SAAC,KAAY,CACXvD,KAAM,8CACNgB,MAAM,QACNwC,OAAO,OAAM,qBAIf,SAAC,KAAY,CACXxD,KAAM,gCACNgB,MAAM,QACNwC,OAAO,OACPlC,QAAS,WACPb,IACF,EAAE,oCAUhB,SAAC,KAAW,CACVgD,KAAMtD,GACNuD,OAAQ,WACNtD,IAAoB,EACtB,EACApC,WAAYb,EAAKa,WACjBE,UAAWf,EAAKe,UAChBI,QAASnB,EAAKkB,YACdyC,GAAI3D,EAAK2D,MAEX,SAAC,KAAc,CACb2C,KAAMpD,GACNqD,OAAQ,WACNpD,IAAuB,EACzB,MAIR,C","sources":["layouts/admin/Profile.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport countryList from \"react-select-country-list\";\r\n\r\nimport {\r\n  annualData,\r\n  companyTypeData,\r\n  headCount,\r\n  industries,\r\n  MarketShare,\r\n} from \"../../assets\";\r\nimport { ChangePassword, CustomButton, EditProfile } from \"../../components\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserData,\r\n  updateUserData,\r\n  user_data_clearErrors,\r\n} from \"../../store\";\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: flex;\r\n  //align-items: center;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  .container_profile {\r\n    width: 90%;\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background: white;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: 4px;\r\n\r\n    .button-wrapper {\r\n      width: 80%;\r\n      display: flex;\r\n      justify-content: space-around;\r\n    }\r\n    .header {\r\n      width: 80%;\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    .body {\r\n      width: 80%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: #a6a6b3;\r\n    }\r\n  }\r\n  .card-slots {\r\n    padding: 40px 20px;\r\n    margin-top: 20px;\r\n    .slots {\r\n      width: 100%;\r\n      margin-bottom: 10px;\r\n      border-bottom: 0.5px solid #c3cad9;\r\n      color: #627285;\r\n\r\n      h6 {\r\n        width: 100%;\r\n      }\r\n      span {\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n  .personal_details {\r\n    margin-top: 20px;\r\n    width: 90%;\r\n    color: #627285;\r\n  }\r\n  .less_width {\r\n    width: 90%;\r\n    margin-top: 10px;\r\n  }\r\n  .full_row {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Profile = ({ data }) => {\r\n  const dispatch = useDispatch();\r\n  const { user_data, updated, user_data_error } = useSelector(\r\n    (state) => state.user_data\r\n  );\r\n\r\n  const options = useMemo(() => countryList().getData(), []);\r\n  const [firstName, setFirstName] = useState(\r\n    data.first_name === null ? \"\" : data.first_name\r\n  );\r\n  const [lastName, setLastName] = useState(\r\n    data.last_name === null ? \"\" : data.last_name\r\n  );\r\n  const [email, setEmail] = useState(data.email === null ? \"\" : data.email);\r\n  const [contact, setContact] = useState(\r\n    data.contact_num === null ? \"\" : data.contact_num\r\n  );\r\n\r\n  const [address, setAddress] = useState(\r\n    data.address === null ? \"\" : data.address\r\n  );\r\n  const [city, setCity] = useState(data.city === null ? \"\" : data.city);\r\n  const [province, setProvince] = useState(\r\n    data.province === null ? \"\" : data.province\r\n  );\r\n  const [country, setCountry] = useState(\r\n    data.country === null ? \"\" : data.country\r\n  );\r\n\r\n  const [companyName, setCompanyName] = useState(\r\n    data.company_name === null ? \"\" : data.company_name\r\n  );\r\n  const [companyType, setCompanyType] = useState(\r\n    data.company_type === null ? \"\" : data.company_type\r\n  );\r\n\r\n  const [industry, setIndustry] = useState(\r\n    data.industry === null ? \"\" : data.industry\r\n  );\r\n  const [annual, setAnnual] = useState(\r\n    data.revenue === null ? \"\" : data.revenue\r\n  );\r\n\r\n  const [totalHeadCount, setTotalHeadCount] = useState(\r\n    data.headcount === null ? \"\" : data.headcount\r\n  );\r\n  const [marketShare, setMarketShare] = useState(\r\n    data.market_share === null ? \"\" : data.market_share\r\n  );\r\n\r\n  const [type, setType] = useState(data.type === null ? \"\" : data.type);\r\n  const [user_package, setUser_package] = useState(\r\n    data.package === null ? \"\" : data.package\r\n  );\r\n\r\n  const [editProfileModal, setEditProfileModal] = useState(false);\r\n  const [changePasswordModal, setChangePasswordModal] = useState(false);\r\n\r\n  const [text_error, setText_error] = useState(\"\");\r\n\r\n  const ready_to_change = () => {\r\n    if (data.type === \"Company\") {\r\n      if (companyName.length === 0) {\r\n        setText_error(\"Company Name must be filled\");\r\n        return false;\r\n      } else if (companyName.length > 0) {\r\n        setText_error(\"\");\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpadate = () => {\r\n    if (ready_to_change()) {\r\n      const payload_update = {\r\n        address: address,\r\n        city: city,\r\n        province: province,\r\n        country: country,\r\n        company_type: companyType,\r\n        industry: industry,\r\n        revenue: annual,\r\n        headcount: totalHeadCount,\r\n        market_share: marketShare,\r\n      };\r\n      dispatch(updateUserData(payload_update, data.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfileContainer>\r\n        <Row style={{ width: \"100%\", padding: \"20px\" }}>\r\n          <Col xs={12} md={4}>\r\n            <Row>\r\n              <div\r\n                className=\"container_profile\"\r\n                style={{ padding: \"20px 0px\" }}\r\n              >\r\n                <div className=\"header\">\r\n                  <h3>{firstName + \" \" + lastName}</h3>\r\n                </div>\r\n                <div className=\"body\">\r\n                  <p>Email: {email}</p>\r\n                  <p>Contact Number: {contact}</p>\r\n                </div>\r\n                <div className=\"button-wrapper\">\r\n                  <Button\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      setEditProfileModal(true);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                      setChangePasswordModal(true);\r\n                    }}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"container_profile card-slots\">\r\n                <div className=\"slots\">\r\n                  <h6>\r\n                    Who you are ? : <span>{type}</span>\r\n                  </h6>\r\n                </div>\r\n                <div className=\"slots\">\r\n                  <h6>\r\n                    Package :{\" \"}\r\n                    <span>{user_package === 1 ? \"Standard\" : \"Custom\"}</span>\r\n                  </h6>\r\n                </div>\r\n                <div className=\"slots\">\r\n                  <h6>\r\n                    Verified :{\" \"}\r\n                    <span>\r\n                      <input\r\n                        type={\"checkbox\"}\r\n                        checked={data.is_verified}\r\n                        value=\"verfication\"\r\n                        readOnly\r\n                      />\r\n                    </span>\r\n                  </h6>\r\n                </div>\r\n                <Button variant=\"primary\" disabled={true}>\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={12} md={8}>\r\n            <div className=\"container_profile \">\r\n              <Row className=\"personal_details\">\r\n                <h5>Personal Details</h5>\r\n              </Row>\r\n              <Row className=\"less_width\">\r\n                <Col>\r\n                  <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Address\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={address}\r\n                    onChange={(e) => {\r\n                      setAddress(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <TextField\r\n                    id=\"outlined-address\"\r\n                    label=\"City\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={city}\r\n                    onChange={(e) => {\r\n                      setCity(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"less_width\">\r\n                <Col>\r\n                  <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Province\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={province}\r\n                    onChange={(e) => {\r\n                      setProvince(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Country{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={country.length > 0 ? country : \"\"}\r\n                      onChange={(e) => setCountry(e.target.value)}\r\n                      input={<OutlinedInput label=\"Name\" />}\r\n                    >\r\n                      {options.map((val, id) => {\r\n                        return (\r\n                          <MenuItem key={val.value} value={val.value}>\r\n                            {val.label}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"personal_details\">\r\n                <h5>Company Details</h5>\r\n              </Row>\r\n              <Row className=\"less_width\">\r\n                <Col>\r\n                  <TextField\r\n                    disabled={data.type === \"Company\" ? false : true}\r\n                    id=\"outlined-name\"\r\n                    label=\"Company Name\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={companyName}\r\n                    onChange={(e) => {\r\n                      setCompanyName(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Company Type{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      disabled={data.type === \"Company\" ? false : true}\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={companyType.length > 0 ? companyType : \"\"}\r\n                      onChange={(e) => setCompanyType(e.target.value)}\r\n                      input={<OutlinedInput label=\"Company Type\" />}\r\n                    >\r\n                      {companyTypeData.map((val, id) => {\r\n                        return (\r\n                          <MenuItem key={val.company} value={val.company}>\r\n                            {val.company}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"less_width\">\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Industry{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      disabled={data.type === \"Company\" ? false : true}\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={industry.length > 0 ? industry : \"\"}\r\n                      onChange={(e) => setIndustry(e.target.value)}\r\n                      input={<OutlinedInput label=\"Industry\" />}\r\n                    >\r\n                      {industries.map((val, id) => {\r\n                        return (\r\n                          <MenuItem\r\n                            key={val.Industry_name}\r\n                            value={val.Industry_name}\r\n                          >\r\n                            {val.Industry_name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Annual Revenue in USD{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      disabled={data.type === \"Company\" ? false : true}\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={annual}\r\n                      onChange={(e) => setAnnual(e.target.value)}\r\n                      input={<OutlinedInput label=\"Annual Revenue in USD\" />}\r\n                    >\r\n                      {annualData.map((val, id) => {\r\n                        return (\r\n                          <MenuItem key={val.annual} value={val.annual}>\r\n                            {val.annual}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"less_width\">\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Total Head Count{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      disabled={data.type === \"Company\" ? false : true}\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={totalHeadCount.length > 0 ? totalHeadCount : \"\"}\r\n                      onChange={(e) => setTotalHeadCount(e.target.value)}\r\n                      input={<OutlinedInput label=\"Total Head Count\" />}\r\n                    >\r\n                      {headCount.map((val, id) => {\r\n                        return (\r\n                          <MenuItem key={val.head} value={val.head}>\r\n                            {val.head}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n                <Col>\r\n                  <FormControl\r\n                    sx={{ width: \"100%\" }}\r\n                    size=\"small\"\r\n                    style={{ background: \"white\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Market Share{\" \"}\r\n                    </InputLabel>\r\n                    <Select\r\n                      disabled={data.type === \"Company\" ? false : true}\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={marketShare.length > 0 ? marketShare : \"\"}\r\n                      onChange={(e) => setMarketShare(e.target.value)}\r\n                      input={<OutlinedInput label=\"Market Share\" />}\r\n                    >\r\n                      {MarketShare.map((val, id) => {\r\n                        return (\r\n                          <MenuItem key={val.share} value={val.share}>\r\n                            {val.share}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n              <p\r\n                style={{\r\n                  color: text_error.length === 0 ? \"white\" : \"red\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {text_error}\r\n              </p>\r\n              <Row\r\n                style={{\r\n                  width: \"90%\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <Col\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"end\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <CustomButton\r\n                    type={\"cancel textnormal margin-top margin-right20\"}\r\n                    width=\"120px\"\r\n                    height=\"40px\"\r\n                  >\r\n                    Cancel\r\n                  </CustomButton>\r\n                  <CustomButton\r\n                    type={\"normal textnormal margin-top \"}\r\n                    width=\"120px\"\r\n                    height=\"40px\"\r\n                    onClick={() => {\r\n                      handleUpadate();\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </CustomButton>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </ProfileContainer>\r\n      <EditProfile\r\n        show={editProfileModal}\r\n        onHide={() => {\r\n          setEditProfileModal(false);\r\n        }}\r\n        first_name={data.first_name}\r\n        last_name={data.last_name}\r\n        contact={data.contact_num}\r\n        id={data.id}\r\n      />\r\n      <ChangePassword\r\n        show={changePasswordModal}\r\n        onHide={() => {\r\n          setChangePasswordModal(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["ProfileContainer","styled","data","dispatch","useDispatch","useSelector","state","user_data","options","updated","user_data_error","useMemo","countryList","getData","useState","first_name","firstName","last_name","lastName","email","contact_num","contact","address","setAddress","city","setCity","province","setProvince","country","setCountry","company_name","companyName","setCompanyName","company_type","companyType","setCompanyType","industry","setIndustry","revenue","annual","setAnnual","headcount","totalHeadCount","setTotalHeadCount","market_share","marketShare","setMarketShare","type","package","user_package","editProfileModal","setEditProfileModal","changePasswordModal","setChangePasswordModal","text_error","setText_error","handleUpadate","length","ready_to_change","payload_update","updateUserData","id","style","width","padding","xs","md","className","variant","onClick","checked","is_verified","value","readOnly","disabled","label","size","fullWidth","onChange","e","target","sx","background","labelId","input","map","val","companyTypeData","company","industries","Industry_name","annualData","headCount","head","MarketShare","share","color","textAlign","marginBottom","marginTop","display","justifyContent","alignItems","height","show","onHide"],"sourceRoot":""}