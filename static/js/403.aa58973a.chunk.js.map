{"version":3,"file":"static/js/403.aa58973a.chunk.js","mappings":"mMAEaA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,uEAAoB,IAC1CC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,uEAAwB,IAClDE,GAAYF,EAAAA,EAAAA,OAAK,kBAAM,4BAAqB,IAC5CG,GAAUH,EAAAA,EAAAA,OAAK,kBAAM,gFAAmB,IACxCI,GAAUJ,EAAAA,EAAAA,OAAK,kBAAM,4BAAmB,IACxCK,GAAYL,EAAAA,EAAAA,OAAK,kBAAM,gFAAqB,IAC5CM,GAAcN,EAAAA,EAAAA,OAAK,kBAAM,6BAAuB,IAChDO,GAAUP,EAAAA,EAAAA,OAAK,kBAAM,gFAAmB,IACxCQ,GAAeR,EAAAA,EAAAA,OAAK,kBAAM,+EAAwB,I,6BCQzDS,EAASC,EAAAA,QAAAA,IAAU,kFAKnBC,EAAgBD,EAAAA,QAAAA,IAAU,yGA8ChC,EAxCc,WACZ,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAAgDC,EAAAA,EAAAA,KAC9C,SAACC,GAAK,OAAKA,EAAMC,SAAS,IADpBA,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAe,EAAfA,gBAY5B,OARAC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,OACLF,IACFG,QAAQC,IAAIJ,GACZN,GAASW,EAAAA,EAAAA,OAEb,GAAG,CAACX,KAGF,UAACH,EAAM,YACL,SAACV,EAAQ,KACT,SAACE,EAAY,KACb,SAACU,EAAa,WACZ,UAAC,KAAM,YACL,SAAC,KAAK,CAACa,KAAK,YAAYC,SAAS,SAACvB,EAAS,MAC1Ce,IACC,iCACE,SAAC,KAAK,CAACO,KAAK,UAAUC,SAAS,SAACtB,EAAO,CAACuB,KAAMV,OAC9C,SAAC,KAAK,CACJQ,KAAK,YACLC,SAAS,SAACpB,EAAS,CAACqB,KAAMV,UAIhC,SAAC,KAAK,CAACQ,KAAK,YAAYC,SAAS,SAACrB,EAAO,OACzC,SAAC,KAAK,CAACoB,KAAK,SAASC,SAAS,SAAClB,EAAO,OACtC,SAAC,KAAK,CAACiB,KAAK,eAAeC,SAAS,SAACjB,EAAY,OACjD,SAAC,KAAK,CAACgB,KAAK,cAAcC,SAAS,SAACnB,EAAW,aAKzD,C","sources":["layouts/admin/index.js","pages/Admin.jsx"],"sourcesContent":["import { lazy } from \"react\";\r\n\r\nexport const AdminNav = lazy(() => import(\"./AdminNav\"));\r\nexport const AdminSideNav = lazy(() => import(\"./AdminSideNav\"));\r\nexport const Dashboard = lazy(() => import(\"./Dashboard\"));\r\nexport const Profile = lazy(() => import(\"./Profile\"));\r\nexport const Masters = lazy(() => import(\"./Masters\"));\r\nexport const WorkForce = lazy(() => import(\"./WorkForce\"));\r\nexport const Questionier = lazy(() => import(\"./Questionier\"));\r\nexport const Surveys = lazy(() => import(\"./Surveys\"));\r\nexport const Competencies = lazy(() => import(\"./Competencies\"));\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  AdminNav,\r\n  AdminSideNav,\r\n  Dashboard,\r\n  Masters,\r\n  Profile,\r\n  Questionier,\r\n  WorkForce,\r\n  Surveys,\r\n  Competencies,\r\n} from \"../layouts/admin\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserData, user_data_clearErrors } from \"../store\";\r\n\r\nconst Master = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #f7f8fa;\r\n`;\r\nconst MasterWrapper = styled.div`\r\n  margin-left: 60px;\r\n  width: calc(100% - 60px);\r\n  height: calc(100% - 70px);\r\n`;\r\n\r\nconst Admin = () => {\r\n  const dispatch = useDispatch();\r\n  const { user_data, updated, user_data_error } = useSelector(\r\n    (state) => state.user_data\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserData());\r\n    if (user_data_error) {\r\n      console.log(user_data_error);\r\n      dispatch(user_data_clearErrors());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Master>\r\n      <AdminNav />\r\n      <AdminSideNav />\r\n      <MasterWrapper>\r\n        <Routes>\r\n          <Route path=\"dashboard\" element={<Dashboard />} />\r\n          {updated && (\r\n            <>\r\n              <Route path=\"profile\" element={<Profile data={user_data} />} />\r\n              <Route\r\n                path=\"workforce\"\r\n                element={<WorkForce data={user_data} />}\r\n              />\r\n            </>\r\n          )}\r\n          <Route path=\"/master/*\" element={<Masters />} />\r\n          <Route path=\"survey\" element={<Surveys />} />\r\n          <Route path=\"competencies\" element={<Competencies />} />\r\n          <Route path=\"questionier\" element={<Questionier />} />\r\n        </Routes>\r\n      </MasterWrapper>\r\n    </Master>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["AdminNav","lazy","AdminSideNav","Dashboard","Profile","Masters","WorkForce","Questionier","Surveys","Competencies","Master","styled","MasterWrapper","dispatch","useDispatch","useSelector","state","user_data","updated","user_data_error","useEffect","getUserData","console","log","user_data_clearErrors","path","element","data"],"sourceRoot":""}